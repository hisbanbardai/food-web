* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  /* font-size: 10px;
  By default the font-size of browser is 16px but we choose to keep 10px here because when we use rem in other elements then it would be easier for us to calculate its value in pixels by just multiplying the value with 10.
  But if we keep it as 10px then it would not be a good user experience because even if use increases its browser's font-size even then our website would still use 10px as font-size. So for that we can use percentage as our responsive unit. We would set font-size as 62.5% because 10px 0.625 times is 16px which is the default browser's font-size. (10 / 16) * 100 = 62.5 */

  font-size: 62.5%;
}

body {
  font-family: "Rubik", sans-serif;
  font-weight: 400;
  line-height: 1;
  color: #555;
}

/* ********************** */
/* GENERAL REUSABLE COMPONENTS */
/* ********************** */
.heading-primary,
.heading-secondary,
.heading-tertiary {
  font-weight: 700;
  color: #333;
  letter-spacing: -0.5px;
}

.heading-primary {
  font-size: 5.2rem;
  line-height: 1.05;
  margin-bottom: 3.2rem;
}

.heading-secondary {
  font-size: 4.4rem;
  line-height: 1.2;
  margin-bottom: 9.6rem;
}

.heading-tertiary {
  font-size: 3rem;
  line-height: 1.2;
  margin-bottom: 3rem;
}

.sub-heading {
  display: block;
  font-size: 1.6rem;
  font-weight: 500;
  color: #cf711f;
  text-transform: uppercase;
  letter-spacing: 0.75px;
  margin-bottom: 1.6rem;
}

.btn:link,
.btn:visited {
  display: inline-block;
  text-decoration: none;
  font-size: 2rem;
  padding: 1.6rem 3.2rem;
  border-radius: 10px;
  font-weight: 600;

  transition: background-color 0.3s;
}

.btn-primary:link,
.btn-primary:visited {
  background-color: #e67e22;
  color: #fff;
}

.btn-primary:hover,
.btn-primary:active {
  background-color: #cf711f;
}

.btn-secondary:link,
.btn-secondary:visited {
  background-color: #fff;
  color: #555;
}

.btn-secondary:hover,
.btn-secondary:active {
  background-color: #fdf2e9;
  box-shadow: inset 0 0 0 3px #fff;
}

.margin-right-sm {
  /* the above is a helper class that we can use anywhere 
  !important because to ensure that this property has the highest property */
  margin-right: 1.6rem !important;
}

.container {
  max-width: 120rem;
  margin: 0 auto;
  padding: 0 3.2rem;
}

.grid {
  display: grid;
  row-gap: 9.6rem;
  column-gap: 6.4rem;
}

.grid--2-cols {
  grid-template-columns: repeat(2, 1fr);
}

.grid--3-cols {
  grid-template-columns: repeat(3, 1fr);
}

.grid--center-vertical {
  align-items: center;
}

strong {
  font-weight: 500;
}

/* ********************** */
/* HEADER SECTION*/
/* ********************** */
.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #ffedcc;
  padding: 0 4.8rem;

  /* We are giving fixed height to header because later we are going to make it sticky */
  height: 9.6rem;
}

.logo {
  height: 2.2rem;
}

/* ********************** */
/* NAV SECTION*/
/* ********************** */
.main-nav-list {
  list-style: none;
  display: flex;
  align-items: center;
  gap: 3.2rem;
}

.main-nav-link:link,
.main-nav-link:visited {
  text-decoration: none;
  color: #333;
  font-size: 1.8rem;
  font-weight: 500;
  transition: all 0.3s;
}

.main-nav-link:hover,
.main-nav-link:active {
  color: #cf711f;
}

.main-nav-link.nav-cta:link,
.main-nav-link.nav-cta:visited {
  background-color: #e67e22;
  color: #ffedcc;
  padding: 1.2rem 2.4rem;
  border-radius: 9px;
}

.main-nav-link.nav-cta:hover,
.main-nav-link.nav-cta:active {
  background-color: #cf711f;
}

/* ********************** */
/* HERO SECTION*/
/* ********************** */
.section-hero {
  background-color: #ffedcc;
  padding: 4.8rem 0 9.6rem 0;
}

.hero {
  display: grid;
  grid-template-columns: 1fr 1fr;
  align-items: center;
  gap: 9.6rem;

  max-width: 130rem;
  margin: 0 auto;
  padding: 0 3.2rem;
}

.hero-description {
  font-size: 2rem;
  line-height: 1.6;
  margin-bottom: 4.8rem;
}

.delivered-meals {
  display: flex;
  align-items: center;
  gap: 1.6rem;
  margin-top: 8rem;
}

.delivered-meals-imgs {
  display: flex;
}

.delivered-meals-imgs img {
  height: 4.8rem;
  width: 4.8rem;
  border-radius: 50%;
  margin-right: -1.6rem;
  border: 3px solid #fdf2e9;
}

.delivered-meals-imgs img:last-child {
  margin: 0;
}

.delivered-meals-text {
  font-size: 1.8rem;
  font-weight: 600;
}

.delivered-meals-text span {
  font-weight: 700;
  color: #cf711f;
}

.hero-img {
  width: 100%;
}

/* ********************** */
/* FEATURED IN*/
/* ********************** */
.section-featured {
  padding: 4.8rem 0 2.4rem 0;
}

.heading-featured-in {
  text-align: center;
  text-transform: uppercase;
  font-size: 1.4rem;
  font-weight: 500;
  letter-spacing: 0.75px;
  margin-bottom: 2.4rem;
  color: #888;
}

.logos {
  display: flex;
  justify-content: space-around;
}

.logos img {
  height: 3.2rem;
  filter: brightness(0);
  opacity: 50%;
}

/* ********************** */
/* HOW IT WORKS SECTION*/
/* ********************** */
.section-how {
  padding: 4.8rem 0 9.6rem 0;
}

.step-number {
  font-size: 8.6rem;
  color: #ccc;
  font-weight: 600;
  margin-bottom: 1.2rem;
}

.step-description {
  font-size: 1.8rem;
  line-height: 1.8;
}

.step-img-box {
  display: flex;
  justify-content: center;
  align-items: center;

  position: relative;
}

.step-img-box::before {
  content: "";
  display: block;
  width: 60%;
  /* the below way of adding height using percentage does not work so we need to find an another way of giving height. 
  We can use padding-bottom: 60% because percentage in padding are based on width of the element not its height so it will give 60% of its parent element's width as padding-bottom
  height: 60px; 
  And as a result it will appear as a square
  */

  background-color: #fdf2e9;
  padding-bottom: 60%;
  border-radius: 50%;

  position: absolute;
  z-index: -2;
}

.step-img-box::after {
  content: "";
  display: block;
  width: 45%;
  /* the below way of adding height using percentage does not work so we need to find an another way of giving height. 
  We can use padding-bottom: 60% because percentage in padding are based on width of the element not its height so it will give 60% of its parent element's width as padding-bottom
  height: 60px; 
  And as a result it will appear as a square
  */

  background-color: #fae5d3;
  padding-bottom: 45%;
  border-radius: 50%;

  position: absolute;
  z-index: -1;
}

.step-img {
  width: 35%;
}

/* ********************** */
/* MEALS SECTION*/
/* ********************** */
.section-meals {
  padding: 9.6rem 0;
}

.meal-title {
  font-size: 2.4rem;
  color: #333;
  font-weight: 600;
  margin-bottom: 3.2rem;
}

.meal-attributes {
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.meal-attribute {
  font-size: 1.8rem;
  display: flex;
  align-items: center;
  gap: 1.6rem;
}

.meal-icon {
  font-size: 2.4rem;
  color: #e67e22;
}

.meal-img {
  width: 100%;
}
